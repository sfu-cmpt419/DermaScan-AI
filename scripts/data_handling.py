# -*- coding: utf-8 -*-
"""data_handle_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KNwapuVO-1SZmnOG6xeYnXzWUwWBKH6y
"""
# Took assistence from chatgpt
# Imported all the important libraries
import os
import cv2
import numpy as np
import random
import matplotlib.pyplot as plt
from glob import glob

# For mounting google drive to google collab
from google.colab import drive
drive.mount('/content/drive')

train_images_path = "/content/drive/MyDrive/Data/Test/Test-Images/"
train_masks_path = "/content/drive/MyDrive/Data/Test/Test-Masks/"

import os
import glob


# Setting file paths accordingly
image_files = sorted(glob.glob(os.path.join(train_images_path, "*.jpg")))
mask_files = sorted(glob.glob(os.path.join(train_masks_path, "*_segmentation.png")))

# Printed the legth to check if we had the correct number of files 
print(len(mask_files))


# Extract numerical IDs from image filenames
image_ids = set()
for file in image_files:
    filename = os.path.basename(file)  # Get only the filename (without the full path)
    image_id = filename.split('.')[0]  # Remove the file extension
    image_ids.add(image_id)

# Extract numerical IDs from mask filenames
mask_ids = set()
for file in mask_files:
    filename = os.path.basename(file)  # Get only the filename
    filename = filename.replace('_segmentation', '')  # Remove "_segmentation"
    mask_id = filename.split('.')[0]  # Remove the file extension
    mask_ids.add(mask_id)

# Find mismatches
missing_masks = image_ids - mask_ids  # Getting the Images that don’t have corresponding masks
missing_images = mask_ids - image_ids  # Getting the Masks that don’t have corresponding images

if mask_ids != image_ids:
  print("Images and masks are not in the same order in the set/list ")
else:
  print("images and maps are in the same position in the set/list")

# Displaying results
if missing_masks:
    print("Images without masks:", missing_masks)
else:
    print("All images have corresponding masks!")

if missing_images:
    print("Masks without images:", missing_images)
else:
    print("All masks have corresponding images!")

len(image_files)

# Getting all images and masks (sorted to maintain mapping) (Took help from chatgpt)
image_files = sorted(glob.glob(os.path.join(train_images_path, "*.jpg")))
mask_files = sorted(glob.glob(os.path.join(train_masks_path, "*.png")))  # Assuming all masks are .png

